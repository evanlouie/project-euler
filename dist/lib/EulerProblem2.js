"use strict";
const EulerProblem_1 = require("./EulerProblem");
class EulerProblem2 extends EulerProblem_1.AbstractEulerProblem {
    constructor(...args) {
        super(...args);
        this.problemNumber = 2;
        this.question = `
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.`;
        this.memory = [];
    }
    fib(n) {
        if (n <= 2) {
            this.memory[n] = n;
        }
        if (typeof this.memory[n] === "undefined") {
            this.memory[n] = this.fib(n - 1) + this.fib(n - 2);
        }
        return this.memory[n];
    }
    fibTest() {
        let matches = false;
        const fibs = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(n => this.fib(n));
        return fibs.toString() === [1, 2, 3, 5, 8, 13, 21, 34, 55, 89].toString();
    }
    answer() {
        let runningSum = 0;
        for (let n = 0; this.fib(n) <= 4000000; n++) {
            if (this.fib(n) % 2 === 0) {
                runningSum = runningSum + this.fib(n);
            }
        }
        return runningSum.toString();
    }
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = EulerProblem2;
